antarctic.document
==================

.. py:module:: antarctic.document

.. autoapi-nested-parse::

   overload the document class of MongoEngine



Classes
-------

.. autoapisummary::

   antarctic.document.XDocument


Module Contents
---------------

.. py:class:: XDocument(*args, **values)

   Bases: :py:obj:`mongoengine.Document`


   A XDocument is an abstract Mongo Document,
   e.g. instances of this document can not be instantiated.
   All concrete objects such as Symbols or Strategies are children of the XDocument.
   Having a common parent helps to share functionality


   .. py:attribute:: meta


   .. py:attribute:: name


   .. py:attribute:: reference


   .. py:attribute:: date_modified


   .. py:method:: reference_frame(objects=None) -> pandas.DataFrame
      :classmethod:


      get a frame of reference data for each object



   .. py:method:: subset(names=None)
      :classmethod:


      extract a subset of documents from the database



   .. py:method:: to_dict(objects=None)
      :classmethod:


      create a dictionary of objects of class cls
      The objects are either given explicitly or if not
      all objects of this particular class are extracted.



   .. py:method:: apply(func, default, objects=None) -> pandas.DataFrame
      :classmethod:


      apply a function func to documents.
      Yield the default document if something went wrong



   .. py:method:: frame(series, key, objects=None) -> pandas.DataFrame
      :classmethod:


      get a series from each document and return a frame of them



   .. py:method:: __lt__(other)

      sort documents by name



   .. py:method:: __eq__(other)

      two documents are equal if they are of the same class
      and have the same name



   .. py:method:: __hash__()

      hashcode



   .. py:method:: __str__()

      string representation of a document



   .. py:method:: __repr__()

      representation of a document



